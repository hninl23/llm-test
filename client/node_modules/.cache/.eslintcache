[{"/Users/hninlwin/llm-test/llm-test/client/src/index.js":"1","/Users/hninlwin/llm-test/llm-test/client/src/App.js":"2","/Users/hninlwin/llm-test/llm-test/client/src/reportWebVitals.js":"3","/Users/hninlwin/llm-test-1/client/src/index.js":"4","/Users/hninlwin/llm-test-1/client/src/App.js":"5","/Users/hninlwin/llm-test-1/client/src/reportWebVitals.js":"6","/Users/hninlwin/llm-test-2/client/src/index.js":"7","/Users/hninlwin/llm-test-2/client/src/App.js":"8","/Users/hninlwin/llm-test-2/client/src/reportWebVitals.js":"9","/Users/hninlwin/llm-test-2/client/src/MonitoringComponent.js":"10"},{"size":535,"mtime":1700352078482,"results":"11","hashOfConfig":"12"},{"size":4115,"mtime":1701998282379,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1700352078482,"results":"14","hashOfConfig":"12"},{"size":535,"mtime":1702440085542,"results":"15","hashOfConfig":"16"},{"size":3955,"mtime":1702440285346,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1702440085542,"results":"18","hashOfConfig":"16"},{"size":535,"mtime":1702478777878,"results":"19","hashOfConfig":"20"},{"size":4270,"mtime":1709136026936,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1702478777878,"results":"22","hashOfConfig":"20"},{"size":2800,"mtime":1702482913100,"results":"23","hashOfConfig":"20"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g1m62b",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x6twrp",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mord1y",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/Users/hninlwin/llm-test/llm-test/client/src/index.js",[],[],"/Users/hninlwin/llm-test/llm-test/client/src/App.js",["55"],[],"/Users/hninlwin/llm-test/llm-test/client/src/reportWebVitals.js",[],[],"/Users/hninlwin/llm-test-1/client/src/index.js",[],[],"/Users/hninlwin/llm-test-1/client/src/App.js",[],[],"/Users/hninlwin/llm-test-1/client/src/reportWebVitals.js",[],[],"/Users/hninlwin/llm-test-2/client/src/index.js",[],[],"/Users/hninlwin/llm-test-2/client/src/App.js",["56"],[],"/Users/hninlwin/llm-test-2/client/src/reportWebVitals.js",[],[],"/Users/hninlwin/llm-test-2/client/src/MonitoringComponent.js",["57","58"],[],"import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nfunction formatTime(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n\n    const formattedTime = `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n\n    return formattedTime;\n  }\n\nconst MonitoringComponent = ({ tokenCountsHistory }) => {\n    const [selectedModel, setSelectedModel] = useState('gpt-3.5-turbo');\n    const [limits, setLimits] = useState({\n        'gpt-3.5-turbo': 40000,\n        //add others\n        'text-embedding-ada-002': 150000,\n        'text-embedding-ada-002-T1': 1000000,\n        'gpt-4': 10000\n    })\n    const [tokenCount, setTokenCount] = useState('');\n    const [currentTime, setCurrentTime] = useState('');\n\n    const handleModelChange = (e) => {\n        setSelectedModel(e.target.value);\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            var tokenCountResponse = await fetch('http://127.0.0.1:5000/get_token_count');\n            var tokenCountData = await tokenCountResponse.json();\n            console.log('tokenL', tokenCount)\n            setTokenCount(tokenCountData.token_count);\n\n\n          const dateTimeResponse = await fetch('http://127.0.0.1:5000/get_date_time');\n          const dateTimeData = await dateTimeResponse.json();\n          const formattedTime = formatTime(dateTimeData.relative_time_difference);\n            setCurrentTime(formattedTime);\n          } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n        };\n\n\n        // Fetch data initially and set up interval for periodic updates\n        fetchData();\n        const intervalId = setInterval(fetchData, 60000); // Fetch every 1 minute\n\n        // Clean up interval on component unmount\n        return () => clearInterval(intervalId);\n      }, []); // Run the effect only once on mount\n\n  return (\n    <div>\n      <h2 className='title-monitor'>Token Monitoring Page</h2>\n      <div className='ans-container'>\n        <label htmlFor='modelDropDown'>Select Model: </label>\n        <select id='modelDropDown' value={selectedModel} onChange={handleModelChange}>\n            <option value=\"gpt-3.5-turbo\">GPT-3.5-TURBO(FREE)</option>\n            <option value=\"gpt-4\">GPT-4(TIER 1)</option>\n            <option value=\"text-embedding-ada-002\">TEXT-EMBEDDING-ADA-002(FREE)</option>\n            <option value=\"text-embedding-ada-002-T1\">TEXT-EMBEDDING-ADA-002(TIER 1)</option>\n        </select>\n\n    <p className='title-mon'>Total Tokens Used: {tokenCount}</p>\n    <p className='title-mon'>Token Limit (per minute): {limits[selectedModel]}</p>\n    <p className='title-mon'>Relative Time (in Minute): {currentTime}</p>\n    </div>\n    </div>\n  );\n};\n\nexport default MonitoringComponent;",{"ruleId":"59","severity":1,"message":"60","line":78,"column":10,"nodeType":"61","messageId":"62","endLine":78,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":24,"column":28,"nodeType":"65","messageId":"66","endLine":24,"endColumn":30},{"ruleId":"59","severity":1,"message":"67","line":15,"column":20,"nodeType":"61","messageId":"62","endLine":15,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":54,"column":10,"nodeType":"70","endLine":54,"endColumn":12,"suggestions":"71"},"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setLimits' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCount'. Either include it or remove the dependency array.","ArrayExpression",["72"],{"desc":"73","fix":"74"},"Update the dependencies array to be: [tokenCount]",{"range":"75","text":"76"},[1868,1870],"[tokenCount]"]